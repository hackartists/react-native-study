#+TITLE:     React-Native Android
#+AUTHOR:    Jongseok Choi
#+EMAIL:     hackartists@gmail.com

#+DESCRIPTION: 
#+KEYWORDS: react-native
#+LANGUAGE:  en
#+OPTIONS:   num:t toc:nil ::t |:t ^:{} -:t f:t *:t <:t
#+OPTIONS:   tex:t d:nil todo:t pri:nil tags:nil
#+OPTIONS:   timestamp:t

# started this on 2020-03-09 Mon

# this allows defining headlines to be exported/not be exported
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

# By default I do not want that source code blocks are evaluated on export. Usually
# I want to evaluate them interactively and retain the original results.
#+PROPERTY: header-args :eval never-export
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [t,10pt]
#+LaTeX_CLASS_OPTIONS: [aspectratio=169]

#+COLUMNS: %20ITEM %13BEAMER_env(Env) %6BEAMER_envargs(Args) %4BEAMER_col(Col) %7BEAMER_extra(Extra)

#+OPTIONS: H:3
#+BEAMER_THEME: Darmstadt
#+BEAMER_OUTER_THEME: miniframes [subsection=false]

#+BEAMER_HEADER: \usepackage[utf8]{inputenc}
#+BEAMER_HEADER: \usepackage{kotex}
#+BEAMER_HEADER: \usepackage{rotating}
#+BEAMER_HEADER: \usepackage{graphicx}
#+BEAMER_HEADER: \usepackage{amssymb,amsmath}
#+BEAMER_HEADER: \usepackage{amsthm}
#+BEAMER_HEADER: \usepackage{algorithmic}
#+BEAMER_HEADER: \usepackage[ruled,linesnumbered]{algorithm2e}
#+BEAMER_HEADER: \usepackage{listings}
#+BEAMER_HEADER: \usepackage[titletoc]{appendix}
#+BEAMER_HEADER: \usepackage{rotating}
#+BEAMER_HEADER: \usepackage{multirow}
#+BEAMER_HEADER: \usepackage{array}
#+BEAMER_HEADER: \usepackage{supertabular}
#+BEAMER_HEADER: \usepackage{dcolumn}
#+BEAMER_HEADER: \usepackage{adjustbox}
#+BEAMER_HEADER: \usepackage{epsfig}
#+BEAMER_HEADER: \usepackage{subfigure}
#+BEAMER_HEADER: \usepackage{acronym}
#+BEAMER_HEADER: \usepackage{url}
#+BEAMER_HEADER: \usepackage{graphicx}
#+BEAMER_HEADER: \usepackage{mathtools}
#+BEAMER_HEADER: \usepackage{longtable}
#+BEAMER_HEADER: \usepackage[acronym]{glossaries}
#+BEAMER_HEADER: \usepackage[font=small,skip=0pt]{caption}
#+BEAMER_HEADER: \usepackage{xcolor}
#+BEAMER_HEADER: \usepackage{color}
#+BEAMER_HEADER: \usepackage{colortbl}
#+BEAMER_HEADER: \usepackage{tikz}

#+BEAMER_HEADER: \AtBeginSection[]{
#+BEAMER_HEADER: \begin{frame}<beamer>\frametitle{Table of Contents}\begin{columns}[t]
#+BEAMER_HEADER: \begin{column}{.5\textwidth}\tableofcontents[currentsection,sections={1-3}]\end{column}
#+BEAMER_HEADER: \begin{column}{.5\textwidth}\tableofcontents[currentsection,sections={4-7}]\end{column}
#+BEAMER_HEADER: \end{columns}\end{frame}
#+BEAMER_HEADER: \subsection{}
#+BEAMER_HEADER: }
#+BEAMER_HEADER: \hypersetup{colorlinks=true, linkcolor=blue}
#+BEAMER: \setbeamercovered{transparent=30}
#+BEAMER_HEADER: \usepackage{blindtext}
#+BEAMER_HEADER: \input{../common/abb}
#+BEAMER_HEADER: \input{../common/options}

* React-Native and Android Setup

** React-Native Setup

*** Android Setup
 - Downloading [[https://adoptopenjdk.net/][AdoptOpenJDK]] version 8
 - Downloading [[https://dl.google.com/android/repository/commandlinetools-linux-6200805_latest.zip][Android SDK]]
 - Installing Android SDK into the PC
 #+BEGIN_SRC sh 
     unzip commandlinetools-linux-6200805_latest.zip
     cd tools
     export ANDROID_HOME="path-to-install-sdk"
     bin/sdkmanager --sdk_root=$ANDROID_HOME "tools"
     export PATH="$ANDROID_HOME/tools/bin:$ANDROID_HOME/tools:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH"
     mkdir ~/.android
     touch ~/.android/repositories.cfg
     sdkmanager "build-tools;28.0.3" "platforms;android-28"
 #+END_SRC
 - Installing AVD targets and running an emulator
 #+BEGIN_SRC sh
     sdkmanager "system-images;android-28;google_apis;x86_64" "system-images;android-28;google_apis;x86"
     avdmanager create avd --package "system-images;android-28;google_apis;x86_64" --name android-28
     avdmanager list avd
     emulator @android-28
 #+END_SRC

*** Installing react-native
- Installing ~react-native~
#+BEGIN_SRC sh
npm i -g react-native  
#+END_SRC
- Installing ~watchman~ for monitoring files chages
#+BEGIN_SRC sh
  sudo pacman -S watchman ## for Arch linux
  brew install watchman ## for Mac OS X

  ## General linux from source
  git clone https://github.com/facebook/watchman.git -b v4.9.0 --depth 1
  cd watchman 
  ./autogen.sh
  ./configure
  make
  sudo make install
#+END_SRC
- Initializing a project and building it
#+BEGIN_SRC sh
npx react-native init proj
cd proj/android
sudo pacman -S gradle ## brew install gradle
gralde build
#+END_SRC

*** Running an app on emulator


* Android Native Modules

** Intoduction

*** Setup

*** Enable gradle

** Toast Module

*** Toast basic module

*** Callbacks

*** Promieses

*** Threading

** Argument Types

*** Argument types

** Register the Module

*** Register the Module

** Sending Events

*** Events to JavaScript


* Useful Tips

** Platform Specific Code

** Navigating Vetween Screens
